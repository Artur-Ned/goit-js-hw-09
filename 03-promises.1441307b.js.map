{"version":3,"sources":["js/03-promises.js"],"names":["formRef","document","querySelector","delayRef","stepRef","amountRef","btn","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","onFormSubmit","evt","preventDefault","Number","value","step","amount","then","console","log","catch","i","addEventListener"],"mappings":";AACA,MAAMA,EAAUC,SAASC,cAAc,SACjCC,EAAWF,SAASC,cAAc,uBAClCE,EAAUH,SAASC,cAAc,sBACjCG,EAAYJ,SAASC,cAAc,wBACnCI,EAAML,SAASC,cAAc,yBAOnC,SAASK,EAAcC,EAAUC,GACxB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAgBC,KAAKC,SAAW,GACtCC,WAAW,KACLH,EACFF,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,KAEpBA,KAKP,SAASQ,EAAaC,GACpBA,EAAIC,iBACAV,IAAAA,EAAQW,OAAOjB,EAASkB,OACxBC,EAAOlB,EAAQiB,MACfE,EAASlB,EAAUgB,MAGzBd,EAAc,EAAGE,GACZe,KAAK,EAAGhB,SAAAA,EAAUC,MAAAA,MACjBgB,QAAQC,gCAAgCjB,UAGzCkB,MAAM,EAAGnB,SAAAA,EAAUC,MAAAA,MACnBgB,QAAQC,+BAA+BjB,SAKvC,IAAA,IAAImB,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAC1BnB,IAAAA,EAAQW,OAAOE,EAAOM,GAG1BrB,EAAcqB,EAAGnB,GACde,KAAK,EAAGhB,SAAAA,EAAUC,MAAAA,MACjBgB,QAAQC,2BAA2BE,QAAQnB,SAG5CkB,MAAM,EAAGnB,SAAAA,EAAUC,MAAAA,MAClBgB,QAAQC,0BAA0BE,QAAQnB,UAhDlDT,EAAQ6B,iBAAiB,SAAUZ","file":"03-promises.1441307b.js","sourceRoot":"../src","sourcesContent":["\nconst formRef = document.querySelector('.form');\nconst delayRef = document.querySelector('input[name=\"delay\"]');\nconst stepRef = document.querySelector('input[name=\"step\"]');\nconst amountRef = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=\"submit\"]');\nformRef.addEventListener('submit', onFormSubmit);\n\n\n\n \n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  \n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(delayRef.value);\n  let step = stepRef.value;\n  let amount = amountRef.value;\n\n\ncreatePromise(1, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise 1 in ${delay} ms`);\n     \n    })\n    .catch(({ position, delay }) => {\n     console.log(`❌ Rejected promise 1 in ${delay}ms`);\n    });\n\n\n\nfor (let i = 2; i <= amount; i++) {\n    let delay = Number(step * i);\n    \n\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      \n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${i} in ${delay}ms`);\n       \n      });\n  }\n  \n\n}"]}